{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "fdc11536",
   "metadata": {},
   "source": [
    "# FIND A NON - NEGATIVE INTEGER THAT IS NOT IN THE ARRAY | TOP MOST PYTHON INTERVIEW QUESTION SERIES"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "903fc331",
   "metadata": {},
   "source": [
    "# Set Moethod"
   ]
  },
  {
   "cell_type": "raw",
   "id": "4c4c58d4",
   "metadata": {},
   "source": [
    "1) convert the given list into set\n",
    "2) find the max and min in the given list\n",
    "3) create a new set with these min and max value of given list\n",
    "4) find the diff betn set A and set B"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "ed3defc0",
   "metadata": {},
   "outputs": [],
   "source": [
    "def missingValue(l):\n",
    "    start = min(l)\n",
    "    end = max(l)\n",
    "    result = set(range(start,end+1))-set(l)\n",
    "    return list(result)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "d16c34f7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[1, 2, 3, 5, 6, 7, 8]"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "l=[0,4,9]\n",
    "missingValue(l)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d54d7e17",
   "metadata": {},
   "source": [
    "# Traditional method "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "7060a3b3",
   "metadata": {},
   "outputs": [],
   "source": [
    "def findnointeger(l):\n",
    "    if len(l)<1:\n",
    "        return False\n",
    "    sample_list=[]\n",
    "    for i in range(max(l)+1):\n",
    "        sample_list.append(i)\n",
    "    not_available=[]\n",
    "    for j in sample_list:\n",
    "        if j in l:\n",
    "            print(f\"{j} is in present in --provided inputlist--{l}\")\n",
    "        else:\n",
    "            print(f\"{j} is not -- in present in --provided inputlist--{l}\")\n",
    "            not_available.append(j)\n",
    "    return not_available\n",
    "            \n",
    "            "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "0ae9fa00",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0 is in present in --provided inputlist--[0, 1, 3, 4, 6, 8, 10]\n",
      "1 is in present in --provided inputlist--[0, 1, 3, 4, 6, 8, 10]\n",
      "2 is not -- in present in --provided inputlist--[0, 1, 3, 4, 6, 8, 10]\n",
      "3 is in present in --provided inputlist--[0, 1, 3, 4, 6, 8, 10]\n",
      "4 is in present in --provided inputlist--[0, 1, 3, 4, 6, 8, 10]\n",
      "5 is not -- in present in --provided inputlist--[0, 1, 3, 4, 6, 8, 10]\n",
      "6 is in present in --provided inputlist--[0, 1, 3, 4, 6, 8, 10]\n",
      "7 is not -- in present in --provided inputlist--[0, 1, 3, 4, 6, 8, 10]\n",
      "8 is in present in --provided inputlist--[0, 1, 3, 4, 6, 8, 10]\n",
      "9 is not -- in present in --provided inputlist--[0, 1, 3, 4, 6, 8, 10]\n",
      "10 is in present in --provided inputlist--[0, 1, 3, 4, 6, 8, 10]\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[2, 5, 7, 9]"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "findnointeger(l)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d8c148af",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
